version: '3.8'
services:
  db:
    image: mysql:8.1
    ports:
      - '3306:3306'
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=luongdao
      - MYSQL_DATABASE=lms-clone
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - lms
    restart: unless-stopped
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=luongdao
      timeout: 45s
      interval: 10s
      retries: 10

  redis:
    image: redis:7.2
    ports:
      - '6380:6379'
    restart: unless-stopped
    volumes:
      - redis:/data
    networks:
      - lms

  rabbitmq:
    image: rabbitmq:3.12.6-management
    restart: unless-stopped
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    networks:
      - lms
    environment:
      - RABBITMQ_DEFAULT_USER=luongdao
      - RABBITMQ_DEFAULT_PASS=123456789

  migrate:
    build:
      context: .
      args:
        - NPM_LOG_LEVEL=notice
      target: development
    command: bash -c "yarn db:init"
    environment:
      - DATABASE_URL=mysql://root:luongdao@db:3306/lms-clone
    networks:
      - lms
    depends_on:
      db:
        condition: service_healthy

  server:
    build:
      context: .
      args:
        - NPM_LOG_LEVEL=notice
      target: development
    ports:
      - 2960:2960
      - 5555:5555 # for prisma studio
    env_file:
      - .env.dev
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started

    networks:
      - lms
    restart: unless-stopped
    volumes:
      - ./:/app/
      # - /app/node_modules

  nginx:
    image: nginx:1.25.3-alpine
    restart: unless-stopped
    depends_on:
      - server
    networks:
      - lms
    ports:
      - '8080:80'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - ./nginx/:/etc/nginx/conf.d

networks:
  lms:
    driver: bridge
volumes:
  mysql:
  redis:
  rabbitmq_data:
  rabbitmq_log:
